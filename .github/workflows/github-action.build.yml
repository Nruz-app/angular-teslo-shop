name: Angular Gifs App

on:
  push:
    branches:
      - main

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Clonar el repositorio
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Git Semantic Version
        uses: PaulHatch/semantic-version@v4.0.3
        id: version
        with:
          major_pattern : "major"
          minor_pattern : "feat"
          format: "${major}.${minor}.${patch}-prerelease${increment}"

      - name: Instalar dependencias
        run: npm ci

      - name: Build Angular App
        run: npx ng build --configuration=production --base-href=/angular-teslo-shop/

      - name: Verificar carpeta de build
        run: ls -la dist/teslo-shop/browser

      - name: Instalar angular-cli-ghpages
        run: npm install -g angular-cli-ghpages

      - name: Limpiar posibles errores anteriores
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          rm -rf github-pages-deploy-action-temp-deployment-folder || true

      - name: Verificar y crear gh-pages branch
        run: |
          git fetch origin gh-pages || git checkout --orphan gh-pages
          git reset --hard origin/main
          git pull origin main

      - name: Clean up old git worktree
        run: git worktree prune


      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
            token: ${{ secrets.GH_TOKEN }}
            branch: gh-pages
            folder: dist/teslo-shop/browser
            clean: true

      - name: Docker Login
        env:
            DOCKER_USER: ${{ secrets.DOCKER_USER }}
            DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin

      - name: Build Docker Image
        env:
          NEW_VERSION: ${{ steps.version.outputs.version }}
        run: |
          docker build -t nruz176/angular-teslo-shop:$NEW_VERSION .
          docker build -t nruz176/angular-teslo-shop:latest .

      - name: Push Docker Image
        env:
          NEW_VERSION: ${{ steps.version.outputs.version }}
        run: |
          docker push nruz176/angular-teslo-shop:$NEW_VERSION
          docker push nruz176/angular-teslo-shop:latest
