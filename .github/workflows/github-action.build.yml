name: Angular Gifs App

on:
  push:
    branches:
      - main  # Cambia esto si usas otra rama para producción

concurrency:
  # Define un grupo de concurrencia basado en la referencia de la rama
  group: ci-${{ github.ref }}
  # Cancela cualquier ejecución anterior en progreso para esta rama
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

#    strategy:
#      matrix:
#        node-version: [18.x,20.x,22.x]

    steps:
      - name: Clonar el repositorio
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      #https://github.com/marketplace/actions/git-semantic-version?version=v4.0.3
      - name: Git Semantic Version
        uses: PaulHatch/semantic-version@v4.0.3
        id: version
        with:
          major_pattern : "major"
          minor_pattern : "feat"
          format: "${major}.${minor}.${patch}-prerelease${increment}"


      - name: Install packages
        run: npm ci

      - name: Build Project
        run: npm run build

      - name: Setup Nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Instalall Depencias
        run: npm ci

      - name: Instalall Depencias
        run: npx ng build --configuration=production --base-href=/angular-teslo-shop/

      - name: Instalar angular-cli-ghpages
        run: npm install -g angular-cli-ghpages

#      - name: Deploy a GitHub Pages
#        run: npx angular-cli-ghpages --dir=dist/gifs-app/browser

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@releases/v4
        with:
            token: ${{ secrets.GH_TOKEN }}
            branch: gh-pages
            folder: dist/teslo-shop/browser
            clean: true


#      - name: deploy to Github Pages
#        env:
#          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
#        run:
#          npm run ng --deploy --repo=https://github.com/Nruz-app/angular-gifs-app.git --name="Nruz-app" --email="ruznicolas176@gmail.com" --base-href=/angular-gifs-app/

      - name: Docker Login
        env:
            DOCKER_USER: ${{ secrets.DOCKER_USER }}
            DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin

      - name: Build Docker Image
        env:
          NEW_VERSION: ${{ steps.version.outputs.version }}
        run: |
          docker build -t nruz176/angular-teslo-shop:$NEW_VERSION .
          docker build -t nruz176/angular-teslo-shop:latest .

      - name: Push Docker Image
        env:
          NEW_VERSION: ${{ steps.version.outputs.version }}
        run: |
          docker push nruz176/angular-teslo-shop:$NEW_VERSION
          docker push nruz176/angular-teslo-shop:latest
